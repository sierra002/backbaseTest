{"version":3,"sources":["./src/app/shared/models/images.ts","./src/environments/environment.ts","./src/app/shared/services/transaction/transaction.service.ts","./src/app/shared/models/months.ts","./src/app/shared/components/transaction-list/transaction-list.component.ts","./src/app/shared/components/transaction-list/transaction-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/pipes/filter.pipe.ts","./src/app/app.module.ts","./src/app/shared/models/transaction-indicator.ts","./src/app/shared/components/transfer/transfer.component.ts","./src/app/shared/components/transfer/transfer.component.html","./src/app/shared/services/money-translator/money-translator.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export enum images {\r\n  'Backbase'= '../../../assets/icons/backbase.png',\r\n  'The Tea Lounge' = '../../../assets/icons/the-tea-lounge.png',\r\n  'Texaco'= '../../../assets/icons/texaco.png',\r\n  'Amazon Online Store'= '../../../assets/icons/amazon-online-store.png',\r\n  '7-Eleven' = '../../../assets/icons/7-eleven.png',\r\n  'Jerry Hildreth' =  '../../../assets/icons/jerry-hildreth.png',\r\n  'Lawrence Pearson' =  '../../../assets/icons/lawrence-pearson.png',\r\n  'H&M Online Store' = '../../../assets/icons/h&m-online-store.png',\r\n  'Southern Electric Company' = '../../../assets/icons/southern-electric-company.png',\r\n  'Whole Foods'= '../../../assets/icons/whole-foods.png',\r\n  'default' = '../../../assets/icons/a2.png',\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {Transaction} from '../../models/transaction';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransactionService {\r\n  private transaction$ = new Subject<Transaction>();\r\n\r\n  get transaction(): Observable<Transaction> {\r\n    return this.transaction$.asObservable();\r\n  }\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public sendTransaction(transaction: Transaction): void {\r\n    this.transaction$.next(transaction);\r\n  }\r\n}\r\n","export const MONTS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n","import {Component, OnInit} from '@angular/core';\r\nimport * as transactions from '../../../../mock/transactions.json';\r\nimport {TRANSACTION_INDICATOR} from '../../models/transaction-indicator';\r\nimport {MONTS} from '../../models/months';\r\nimport {images} from '../../models/images';\r\nimport {TransactionService} from '../../services/transaction/transaction.service';\r\nimport {FormControl} from '@angular/forms';\r\n\r\nexport type SortType = 'date' | 'name' | 'amount';\r\n\r\n@Component({\r\n  selector: 'app-transaction-list',\r\n  templateUrl: './transaction-list.component.html',\r\n  styleUrls: ['./transaction-list.component.scss']\r\n})\r\nexport class TransactionListComponent implements OnInit {\r\n  transactions = [];\r\n  dataToShow = [];\r\n  search = new FormControl();\r\n  sortType: SortType = 'date';\r\n  desc = true;\r\n\r\n  get isDate(): boolean {\r\n    return this.sortType === 'date';\r\n  }\r\n\r\n  get isName(): boolean {\r\n    return this.sortType === 'name';\r\n  }\r\n\r\n  get isAmount(): boolean {\r\n    return this.sortType === 'amount';\r\n  }\r\n\r\n  constructor(private transactionService: TransactionService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.transactions = transactions.data;\r\n    this.parseToView();\r\n    this.transactionService.transaction.subscribe((transaction) => {\r\n      this.transactions.push(transaction);\r\n      this.parseToView();\r\n    });\r\n  }\r\n\r\n  sortBy(type: SortType): void {\r\n    if (type !== this.sortType) {\r\n      this.sortType = type;\r\n    } else {\r\n      this.desc = !this.desc;\r\n    }\r\n    this.parseToView();\r\n  }\r\n\r\n  parseToView(): void {\r\n    this.dataToShow = this.transactions.map((t) => {\r\n      const date = new Date(t.dates.valueDate);\r\n      return {\r\n        dateMills: t.dates.valueDate,\r\n        date: `${MONTS[date.getMonth()]} ${date.getDate()}`,\r\n        amount: parseInt(TRANSACTION_INDICATOR[t.transaction.creditDebitIndicator] + 1 , 10) * t.transaction.amountCurrency.amount,\r\n        amountText: TRANSACTION_INDICATOR[t.transaction.creditDebitIndicator] + '$' + t.transaction.amountCurrency.amount,\r\n        // tslint:disable-next-line:max-line-length\r\n        img: images[t.merchant.name] ? images[t.merchant.name] : images.default, // probably this should be provided by backend but for this case i have used the images i have,\r\n        name: t.merchant.name,\r\n        type: t.transaction.type,\r\n        color: t.categoryCode\r\n      };\r\n    }).sort(this.sortData.bind(this));\r\n  }\r\n\r\n  private sortData(a, b): number {\r\n    let prop;\r\n    let propA;\r\n    let propB;\r\n    const descVal = this.desc ? 1 : -1;\r\n    switch (this.sortType) {\r\n      case 'amount':\r\n        prop = 'amount';\r\n        propA = a[prop];\r\n        propB = b[prop];\r\n        break;\r\n      case 'name':\r\n        prop = 'name';\r\n        propA = a[prop];\r\n        propB = b[prop];\r\n        break;\r\n      default:\r\n        prop = 'dateMills';\r\n        propA = new Date(a[prop]).getTime();\r\n        propB = new Date(b[prop]).getTime();\r\n        break;\r\n    }\r\n    if (propA > propB) {\r\n      return descVal * -1;\r\n    } else if (propA < propB) {\r\n      return descVal * 1;\r\n    }\r\n    return 0;\r\n\r\n  }\r\n\r\n}\r\n","<div>\r\n  <div class=\"title\">\r\n    <img src=\"../../../../assets/icons/briefcase.png\" alt=\"\">\r\n    Recent Transactions\r\n  </div>\r\n  <div class=\"content\">\r\n    <div class=\"contentHeader\">\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Search</mat-label>\r\n        <input [placeholder]=\"'Search By Typing...'\" matInput [formControl]=\"search\" autocomplete=\"off\">\r\n      </mat-form-field>\r\n      <div class=\"sortOptions\">\r\n        <label>Sort by</label>\r\n        <div>\r\n          <span [ngClass]=\"{'arrow': isDate, 'down': desc, 'up': !desc}\" (click)=\"sortBy('date')\">DATE</span>\r\n          <span class=\"noSideBorder\" [ngClass]=\"{'arrow': isName, 'down': desc, 'up': !desc}\" (click)=\"sortBy('name')\">BENEFICIARY</span>\r\n          <span [ngClass]=\"{'arrow': isAmount, 'down': desc, 'up': !desc}\" (click)=\"sortBy('amount')\">AMOUNT</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\" *ngFor=\"let transaction of dataToShow | filter:search.value\">\r\n      <div class=\"indicator\" [style]=\"{'background-color': transaction.color}\"></div>\r\n      <div class=\"info\">\r\n        <div class=\"date\">{{transaction.date}}</div>\r\n        <div class=\"transactionData\">\r\n          <img [src]=\"transaction.img\" alt=\"img\">\r\n          <div>\r\n            <Label>{{transaction.name}}</Label>\r\n            <span>{{transaction.type}}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"money\">{{transaction.amountText}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n}\r\n","<header>\r\n  <img src=\"../assets/logo.jpg\" alt=\"Logo\">\r\n</header>\r\n<div>\r\n  <app-transfer>\r\n  </app-transfer>\r\n  <app-transaction-list>\r\n  </app-transaction-list>\r\n</div>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(items: any[], name: string): any[] {\r\n    if (!name){\r\n      return items;\r\n    }\r\n\r\n    return items.filter((i) => i.name.toLowerCase().includes(name.toLowerCase()));\r\n  }\r\n\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {TransferComponent} from './shared/components/transfer/transfer.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { TransactionListComponent } from './shared/components/transaction-list/transaction-list.component';\r\nimport { FilterPipe } from './shared/pipes/filter.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TransferComponent,\r\n    TransactionListComponent,\r\n    FilterPipe\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export enum TRANSACTION_INDICATOR {\r\n  'CRDT' = '',\r\n  'DBIT' = '-',\r\n  undefined = ''\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AbstractControl, FormControl, FormGroup, FormGroupDirective, ValidationErrors, Validators} from '@angular/forms';\r\nimport {MoneyTranslatorService} from '../../services/money-translator/money-translator.service';\r\nimport {TransactionService} from '../../services/transaction/transaction.service';\r\nimport {distinctUntilChanged} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-transfer',\r\n  templateUrl: './transfer.component.html',\r\n  styleUrls: ['./transfer.component.scss']\r\n})\r\nexport class TransferComponent implements OnInit {\r\n  private account = 'Free checking(4692) -';\r\n  transaction: FormGroup;\r\n  money = 582476;\r\n  disableSubmit = false;\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n\r\n  constructor(private moneyTranslatorService: MoneyTranslatorService, private transactionService: TransactionService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.transaction = new FormGroup({\r\n      account: new FormControl({\r\n        value: this.moneyTranslatorService.fromStoredToMoney(this.money, this.account),\r\n        disabled: true\r\n      }, Validators.min(-500)),\r\n      toAccount: new FormControl(null, Validators.required),\r\n      amount: new FormControl(null, [this.valueExceededValidator.bind(this), Validators.min(0), Validators.required])\r\n    });\r\n\r\n    // no need to unsubscribe because it's a single page\r\n    this.transaction.get('amount').valueChanges.pipe(distinctUntilChanged()).subscribe(() => {\r\n      this.disableSubmit = false;\r\n      this.transaction.get('amount').updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n\r\n  sendTransaction(): void {\r\n    if (this.transaction.invalid) {\r\n      return;\r\n    }\r\n    const top = this.moneyTranslatorService.fromMoneyToStored(-500);\r\n    if ((this.money - this.moneyTranslatorService.fromMoneyToStored(this.transaction.get('amount').value)) > top) {\r\n      this.money -= this.moneyTranslatorService.fromMoneyToStored(this.transaction.get('amount').value);\r\n      this.transactionService.sendTransaction({\r\n        categoryCode: this.getRandomColor(),\r\n        dates: {\r\n          valueDate: new Date().getTime()\r\n        },\r\n        merchant: {\r\n          accountNumber: '0', // usually i think back should provide this or user but in order to simplify i just dont care about it\r\n          name: this.transaction.get('toAccount').value\r\n        },\r\n        transaction: {\r\n          amountCurrency: {\r\n            amount: this.transaction.get('amount').value,\r\n            currencyCode: 'EUR' // there's no way to configure this in this app\r\n          },\r\n          creditDebitIndicator: 'DBIT',\r\n          type: 'Transaction'\r\n        }\r\n      });\r\n      this.formDirective.resetForm();\r\n      this.transaction.get('account').setValue(this.moneyTranslatorService.fromStoredToMoney(this.money, this.account));\r\n    } else {\r\n      this.disableSubmit = true;\r\n      this.transaction.get('amount').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validator created to show error before changing the actual\r\n   * money value\r\n   */\r\n  valueExceededValidator(): ValidationErrors | null {\r\n    return this.disableSubmit ? {maxExceeded: true} : null;\r\n  }\r\n\r\n  getRandomColor(): string {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"title\">\r\n    <img src=\"../../../../assets/icons/a2.png\" alt=\"\">\r\n    Make a Transfer\r\n  </div>\r\n  <div class=\"content\">\r\n    <form [formGroup]=\"transaction\" (ngSubmit)=\"sendTransaction()\">\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>FROM ACCOUNT</mat-label>\r\n        <input [placeholder]=\"'Account'\" matInput formControlName=\"account\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>TO ACCOUNT</mat-label>\r\n        <input [placeholder]=\"'Georgia Power Electronic Company'\" matInput formControlName=\"toAccount\" autocomplete=\"off\">\r\n        <mat-error *ngIf=\"transaction.get('amount').errors\">Account name is required</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>AMOUNT</mat-label>\r\n        <input [type]=\"'number'\" [placeholder]=\"'$ 0.00'\" matInput formControlName=\"amount\" autocomplete=\"off\">\r\n        <mat-error *ngIf=\"transaction.get('amount').errors?.maxExceeded\">User should not be overdraft beyond -$500, please call support</mat-error>\r\n        <mat-error *ngIf=\"transaction.get('amount').errors?.min\">Transactions can not be negative</mat-error>\r\n        <mat-error *ngIf=\"transaction.get('amount').errors?.required\">Amount can not be empty</mat-error>\r\n      </mat-form-field>\r\n      <div class=\"submit\">\r\n        <button class=\"submitButton\" mat-flat-button [disabled]=\"disableSubmit\"\r\n                [title]=\"'User should not be overdraft beyond -$500'\">SUBMIT\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MoneyTranslatorService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  fromStoredToMoney(value: number, additionalText = ''): string {\r\n    return `${additionalText} ${value > 0 ? '$' + value / 100 : '( $' + (value / 100) + ')'}`;\r\n  }\r\n\r\n  fromMoneyToStored(value): number {\r\n    return value * 100;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}